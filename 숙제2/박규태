- 스코프, 스코프 체인
스코프란 식별자에 대한 유휴볌위이다. 만약 어떤 경계 A의 외부에서 선언할 경우 선언한 변수는 A의 외부뿐 아니라 내부에서 접근이 가능하다.
하지만 A의 내부에서 선언한 변수는 오직 A의 내부에서만 접근할 수 있다. 
이러한 경향은 다른 언어에서도 존재하지만 ES5까지의 자바스크립트에서는 전역공간을 제외한 오직 함수에서만 생선된다. 

식별자의 유효범위를 안에서부터 바깥으로 차례로 검색해나가는 것을 스코프체인이라 하며 이를 가능하게 하는 것이 바로
LexicalEnvironment의 두 번째 수집 자료인 outerEnvironmentReference이다.

#스코프 체인
outerEnvironmentReference는 현재 호출된 함수가 선언될 당시의 LexicalEnvironment를 참조한다. 
만약 중첩적이게 함수가 선언되었다고 가정하면 함수들은 각자 선언될 당시의 LexicalEnvironment를 찾아 올란간다. 
이렇게 차례대로 올라가면서 LexicalEnvironment연결리스트를 구성할 수 있다. 
연결리스트 특성으로 인해 여러 스코프 안에서는 동일한 식별자를 선언할 경우 무조건 스코프 체인 상에서 가장 먼저 발견된 식별자에만 접근 가능하다. 

점점 안으로 들어오면서 컨텍스트의 위치는 작아지지만 접근할 수 있는 변수는 점점 늘어난다. 하지만 스코프 체인 상에 있는 변수라고 무조건 접근 가능한 것은 아니다. 
숨길 수 있는 방법 중 변수 은닉화라는 방법이 있다. 변수 은닉화는 내부함수에서 외부함수와 같은 이름으로 변수를 선언하여 동일한 이름의 변수에 접근하지 못하게 하는 것이다. 

전역변수: 젼역 공간에서 선언한 변수
지역변수: 함수 내부에서 선언한 변수 

협업을 함에 있어 전역변수보다 지역변수를 지향하는것이 좋다. 

