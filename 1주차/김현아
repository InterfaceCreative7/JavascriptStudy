[Chapter 1]
<01>
* 데이터 타입의 종류
    - 기본형 : 할당이나 연산시 복제
        숫자 (number)
        문자열 (string)
        불리언 (boolean)
        null
        undefined
        Symbol
    - 참조형 : 할당이나 연산시 참조
        객체 (object)
        배열 (array)
        함수 (function)
        날짜 (date)
        정규표현식 (RegExp)
        Map, WeakMap
        Set, WeakSet
<02>
* 자바스크립트애서 숫자의 경우 정수형인지 부동소수형인지 구분 X

* 식별자와 변수
    - 식별자 : 변수명
    - 변수 : '변할 수 있는 데이터(문자열, 숫자, 객체, 배열 ...)'

<03>
* 변수 선언
   # var a; // 식별자 : a

* 데이터 할당
    # var a;
    # a = 'abc'; // a라는 이름을 가진 주소에 문자열 'abc' 할당

    + 효율적인 문자열 데이터의 변환을 위하여 "변수"와 "데이터"를 별도의 공간에 나누어 저장한다.

<04> 
* 변수 vs 상수 -> 변경 가능성
    변경 가능성의 대상 : 변수 영역
* 불변값 vs 상수
    변경 가능성의 대상 : 데이터 영역

    # var a = 'abc';
    # a = a + 'def'; // 새로운 문자열 'abcdef'를 만들어 그 주소를 변수 a에 저장

    # var b = 5; // 변수 b에 숫자 5 할당
    # var c = 5; // b 주소의 값 재활용
    # b = 7; // 7의 주소를 새로 만들어 b에 저장

    => 불변값의 성질을 알 수 있다. 
    + 불변값 : 기본형 데이터 (숫자, 문자열, boolean, null, undefined, Symbol)

* 참조형 데이터의 할당
    # var obj1 = {a : 1, b : 'bbb'}; 
    # obj1.a = 2; // 데이터 영역에서 2 검색 -> 빈 공간에 저장 -> 이 주소를 obj1의 주소의 데이터에 저장 

    => 기존의 객체 내부의 값만 바뀐 것 ('새로운 객체' 만들어진 것 X)
    + 기본형 데이터와의 차이 : '객체의 변수(프로퍼티) 영역'이 별도로 존재
    + 가변값 : 참조형 데이터 

* 중첩 객체
    : 참조형 데이터의 프로퍼티에 다시 참조형 데이터를 할당하는 경우 
    # var obj = { x : 3, arr : [3, 4, 5]}; 

    + 재할당 명령을 내릴 경우
        # var obj = { x : 3, arr : [3, 4, 5]}; 
        # obj.arr = 'str'; // arr의 주소의 데이터는 자신의 주소를 참조하는 변수가 하나도 없게 됨 (참조 카운트 : 1->0)

        + 참조카운트가 0인 메모리 주소는 GC(가비지 컬렉터)의 수거 대상 -> 수거된 메모리는 빈 공간이 됨.
    