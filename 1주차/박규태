- 데이터 타입의 종류
기본형: 숫자, 문자열, bpplean, null, undefined, 심볼
참조형: 객체. 배열, 함수, 날짜, 정규표현식

- 메모리와 데인터
컴퓨터는 모든 데이터를 0과 1로 바꿔 기억해야 한다. 0또는 1로만 표현할수 있는것을 비트라고 하는데 비트로 저장하는 것은 매우 비효율적이다. 그래서 비트보다 단위수가 큰 1바이트로 더 효율적이게 표현할 수 있다. 
자바스크릡트는 메모리 용량이 과거보다 커져 다른 언어와 보다 넉넉하게 메모리를 확보한다. 이러한 바이트들을 모아 위치를 파악할 수 있게 메모리 주소값이라고 부른다.

- 변수와 식별자
보통 변수와 식별자를 혼용해서 많이 쓰는데 변수는 "변경 가능한 데이터가 담길 수 있는 공간", 식별자는 "이러한 데이터를 식별하기 위해 사용되는 이름"이다. 

- 데이터 할당
데이터를 할당할 때 변수 영역과 데이터 영역으로 구분한다. 변수 영역에는 이름 즉 식별자와 주소값을 저장하고 데이터 영역에는 데이터값을 저장한다. 이렇게 단계를 거쳐 번거롭게 하는 이유는 2가지가 있다. 
1. 데이터 변환을 자유롭게 하기 위해서이다. 만약 단계를 거치지 않고 저장한다면 데이터 변환을 할 때마다 해당 공간보다 뒤에 있는 데이터는 전부 옮겨야 하므로 매우 비효율적이다. 

2. 메모리를 더욱 효율적으로 관리하기 위해서이다. 같은 값의 데이터를 저장할 때 주소값만 다르게 하면 되기 때문이다. 

- 불변값
변수와 상수를 구분 짓는 데에는 변수 영역 메모리의 변경 가능성에 있다. (한 번 데이터 할당이 이뤄진 변수 공간에 다른 데이터를 재할당할 수 있는지 여부)
불변성여부를 구분하기 위해서는 데이터 영역 메모리의 변경 가능성에 있다. 데이터 영역의 값들은 바꿀 수 없으며 새로은 값들을 할당할 경우 데이터 영역에서 새롭게 만든다. 
기본형 데이터는 모두 불변값이다. 

- 가변값 
참조형 데이터는 대부분 가변값이며 예외가 존재한다. 
참조형 데이터에서 새롭게 값을 변경할때 데이터 영역은 기존의 메모리 공간을 그대로 활용하면서 객체의 변수값에 다른값을 대입하여 변경한다. (객체의 데이터 영역 위치가 변하지 않는다.) 즉, 새로운 객체가 아닌 기존의 객체 내부가 바뀐것 이다. 
참조형 데이터에 다시 참조형 데이터가 있을 경우 새로운 값으로 변경할 때 변수의 데이터 영역이 변경되므로 가비지 컬렉터의 수거 대상이 된다. 가비지 컬렉터는 메모리 사용량이 포화 상태에 임박했을 때 자동으로 메모리를 수거한다. 

