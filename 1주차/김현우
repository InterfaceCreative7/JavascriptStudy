1-1. 데이터 타입
    i. 기본형(원시형)(불변값)
        1. 숫자형
        2. 문자형
        3. bullean
        4. null
        5. undefined
        6. symbol
    ii. 참조형(객체)
        1. 배열
        2. 함수
        3. 날짜
        4. 정규표현식
        5. map, weakmap
        6. set, weakset

1-2. 메모리와 데이터
    1byte = 8bit
    각 bit는 고유한 식별자를 가진다.
    모든 데이터는 바이트 단위의 식별자, 메모리 주솟값을 통해 구분하고 연결가능.

2. 식별자와 변수
    변수 == 변할 수 있는 수
    식별자 == 어떤 데이터를 식별하는 데 사용하는 이름(변수명)

3. 변수선언과 데이터 할당
    var a; // 변수 선언
    a = 'abc'; // 변수에 데이터 할당
    var a = 'abc'; // 변수선언과 동시에 데이터 할당
    이 때 'abc'는 a의 주소에 할당되지 않고 별도의 메모리 공간에 저장하고,
    그 주소를 변수에 저장하는 식으로 이루어진다.

    문자열을 변환하는 경우 역시 새로운 메모리 공간을 만들어 저장한다.

4. 기본형 데이터와 참조형 데이터
    불변값 != 상수
    변수와 상수는 변수 영역 메모리의 변경 가능성으로 구분 짓는다.
    (한 번 데이터 할당이 이뤄진 변수 공간에 다른 데이터를 재할당 할 수 있는지)
    불변성은 데이터 영역 메모리의 변경 가능성으로 여부를 정한다.

    참조형 데이터의 기본적인 성질은 가변값인 경우가 많지만 예외적으로 불변값을
    활용할 수도 있다.
    참조형 데이터와 기본형 데이터의 차이는 객체의 변수영역이 별도로 존재한다는 것이다.

    객체는 별도로 변수 영역에만 할애하고 데이터 영역은 기존의 메모리 공간을
    그대로 활용한다. 데이터 영역에 저장된 값은 불변값이지만 변수에는 다른 값을
    얼마든지 대입할 수 있으므로 가변값이라 하는 것이다.
    
    참조형의 데이터의 프로퍼티에 참조형 데이터를 할당하는 경우 이를 
    중첩 객체라 한다.

    var obj = {
        x:3;
        arr:[3, 4, 5];
    };
    이 때 arr에 문자열 'str'을 재할당 하는 경우 배열을 참조하는 변수가 사라지게 된다.
    자신의 주소를 참조하는 변수의 개수를 참조카운트라 할 때 참조카운트가 0인 메모리 주소는
    가비지 컬렉팅에 의해 제거돼 빈공간이 되는데 위의 경우 arr이 참조하고 있던 배열의 주소
    와 그 데이터의 주소들인 arr[0],arr[1],arr[2]이 수거대상이 된다.
    




