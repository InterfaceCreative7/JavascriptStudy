- 콜백 함수란?
콜백함수는 다른 코드의 인자로 넘겨주는 함수다. 콜백 함수를 넘겨받은 코드는 필요에 따라 이 콜백 함수를 실행한다. 
이 콜백함수는 제어권과 관련이 깊다. 어떤 함수에서 X를 호출하면서 '특정 조건인 때 함수 Y를 실행 후 나에게 알려줘라'는 요청을 보내는 것이다.
이 요청을 받은 X는 해당 조건이 갖쳐줬는지 판단후 Y를 직접 호출한다. 이처럼 콜백함수는 다른 코드에게 인자로 넘겨줘 그 제어권도 함께 위힘한 함수다.
콜백 함수를 위임받은 코드는 자체적인 내부 로직에 의해 이 콜백 함수를 적절한 시점에 실행할 것이다. 

- 제어권
앞서 말했듯 제어권은 콜백함수 내에서 매우 중요하다. 몇 가지 예제를 통해 살패보자.

#호출 시점(setInterval)
기본적으로 setInterval은 var interval = scope.setInterval(fun,delay[, param1, param2, ...]) 형태다.
우선 scope에는 Window객체 또는 Worker의 인스턴스가 들어올 수 있다. 두 객체 모두 메서드를 제공한다.
만약 Window객체를 사용하면 Window는 생략한다. 매게변수로 fun과 delay를 무조건 전달해야 하지만 나머지는 전달 하지 않아도 된다.
어떠한 값도 return하지 않으며 고유한 Id를 반환하는데 이는 실핼 종료를 위해 사용됩니다.

#인자(Array.prototype.map)
map 메서드는 메서드의 대상이 되는 배열의 모든 요소들을 처음부터 끝까지 하나씩 꺼내어 콜백 함수를 반복 호출하고, 콜백함수의 실행 결과들을 모아 새로운 배열을 만든다.
콜백함수의 첫 번째 인자에는 배열의 요수 중 현재값, 두 번째 인자에는 현재값의 인덱스, 세 번째 인자에는 map 메서드의 대상이 되는 배열 자체가 담긴다.
이름은 중요하지 않고, 각 단어의 위치들이 중요하다. 

#this
콜백함수 경우 일반 함수처럼 전역객체를 참조하는 경우도 있지만 제어권을 넘겨받을 경우 콜백 함수에 별도로 this가 될 대상을 지정한 경우 그 대상을 참조하게 된다. 
제어권을 넘겨받을 코드에서 call/apply 메서드의 첫 번째 인자에 콜백 함수 내부에서의 this가 될 대상을 명시적으로 바인딩할 수 있어 대상 지정이 가능하다.

- 콜백 함수는 함수다
콜백 함수는 함수다. 그래서 콜백 함수로 어떤 객체의 메서드를 전달하더라고 그 메서드는 메서드가 아닌 함수로서 호출된다. 
콜백 함수로 전달할 경우 메서드로 전달하는 것이 아닌 메서드가 가리키는 함수만 전달한 것이된다. 
이 함수는 메서드로서 호출할 때가 아니기 때문에 객체와 직접적인 연관이 없어진다. 
즉, 어떤 함수의 인자에 객체의 메서드를 전달할때 이는 결국 메서드가 아닌 함수라는것이 중요하다. 